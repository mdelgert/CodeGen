@{
    ViewBag.Title = "Columns";
}

<h2>Columns</h2>

<div id="grid">
    <span id="staticNotification"></span>
    <div id="appendto" class="k-block"></div>
</div>

<script>
    $(function () {
        $("#grid").kendoGrid({
            height: 400,
            columns: [

                { field: "ColumnName", width: "100px" },

                { field: "ColumnType", width: "100px" },

                { field: "TableName", width: "100px" },

                { command: ["edit", "destroy"], title: "&nbsp;", width: "100px" }
            ],
            editable: {
                mode: "popup",
                confirmation: false,
            },
            pageable: true,
            sortable: true,
            filterable: true,
            toolbar: ["create", "save", "cancel"], 
            dataSource: {
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true,
                sort: {
                    field: "Id",
                    dir: "desc"
                },
                pageSize: 10,
                requestEnd: function (e) {
                    PopNotify(e.response.PopNotificationMessage, e.response.PopNotificationMessageType);
                    if (e.response.PopNotificationMessageType === "error") {
                        this.cancelChanges(); //Cancle grid save
                    }
                },

                schema: {
                    data: "Data",
                    total: "Total",
                    PopNotificationMessage: "PopNotificationMessage",
                    PopNotificationMessageType: "PopNotificationMessageType", //Type of notification
                    model: { 
                        id: "Id",
                        fields: {
                            Id: { editable: false, type: "number" },
                            ColumnName: { type: "string", validation: { required: true } },
                            ColumnType: { type: "string", validation: { required: true } },
                            TableName: { type: "string", validation: { required: true } }


                        }
                    }
                },

                batch: false,
                transport: { //use HTTP POST request as by default GET is not allowed by ASP.NET MVC

                    create: {
                        url: "@Html.Raw(Url.Action("Create", "Column"))",
                        contentType: "application/json",
                        type: "POST"

                    },

                    read: {
                        url: "@Html.Raw(Url.Action("Read", "Column"))",
                        contentType: "application/json",
                        type: "POST"

                    },

                    update: {
                        url: "@Html.Raw(Url.Action("Update", "Column"))",
                        contentType: "application/json",
                        type: "POST"
                    },

                    destroy: {
                        url: "@Html.Raw(Url.Action("Destroy", "Column"))",
                        contentType: "application/json",
                        type: "POST"
                    },

                    parameterMap: function (data, operation) {
                        return JSON.stringify(data);
                    }

                }

            }

        });

    });

</script>

<script>
    function PopNotify(PopNotificationMessage, PopNotificationMessageType) {

        var staticNotification = $("#staticNotification").kendoNotification({
            appendTo: "#appendto",
            autoHideAfter: 0,
            //button: false,
            hideOnClick: false
        }).data("kendoNotification");

        //http://api.jquery.com/remove/
        $("#appendto").empty();
        staticNotification.show(PopNotificationMessage, PopNotificationMessageType);
    };
</script>















