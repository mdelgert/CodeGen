@{
    ViewBag.Title = "Columns";
}

<h2>Columns</h2>


<div id="grid">
</div>

<script type="text/x-kendo-template" id="template">

    <div class="toolbar">


        @*

            <label class="dbtable-label" for="dbtable">Show columns by table:</label>
            <input type="search" id="dbtable" style="width: 150px" />

        *@

    </div>


    <div>


        <a class="k-button k-button-icontext k-grid-add" href=""><span class="k-icon k-add"></span>Add new record</a>

        @*




            <a class="k-button k-button-icontext k-grid-save-changes" href=""><span class="k-icon k-update"></span>Save changes</a>

            <a class="k-button k-button-icontext k-grid-cancel-changes" href=""><span class="k-icon k-cancel"></span>Cancel changes</a>

        *@


    </div>

    <br />

    <br />

    <div>
        <span id="staticNotification"></span>
        <div id="appendto" class="k-block"></div>
    </div>

</script>


<style scoped>
    #grid .k-grid-toolbar {
        padding: .6em 1.3em;
    }

    .dbtable-label {
        vertical-align: middle;
        padding-right: .5em;
    }

    #dbtable {
        vertical-align: middle;
    }

    .toolbar {
        float: right;
    }
</style>

<script>

    var tableDefaultID = 15;

    var tables = [];

    //get categories and rebind the grid
    $.getJSON("@Html.Raw(Url.Action("GetAll", "Table"))", function (data) {
        tables = data;
        dataSource.fetch();
    });


    $(function () {

        var grid = $("#grid").kendoGrid({

            columns: [

                {
                    field: "ColumnName",
                    title: "Column Name",
                    width: "100px"
                },

                //{ field: "TableID", title: "Table", width: "100px", editor: tableDropDownEditor, template: "#=TableID.TableName#" },

                //{
                //    field: "TableID", width: "100px",
                //    editor: tableDropDownEditor,
                //    title: "Table",
                //    template: "#=getTableName(TableID)#"
                //},



                //{ field: "TableID", title: "Table", width: "100px"},

                { command: ["edit", "destroy"], title: "&nbsp;", width: "50px" }

            ],

            //editable: "inline",

            //editable: true,

            editable: {
             mode: "inline",
             confirmation: false
            },


            pageable: true,
            sortable: true,
            filterable: true,
            toolbar: kendo.template($("#template").html()),

            //autoBind: false, // disable autobinding as we should wait for the categories to be loaded

            dataSource: {
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true,
                sort: {
                    field: "Id",
                    dir: "desc"
                },
                pageSize: 10,

                requestEnd: function (e) {
                    PopNotify(e.response.PopNotificationMessage, e.response.PopNotificationMessageType);
                    if (e.response.PopNotificationMessageType === "error") {
                        this.cancelChanges(); //Cancle grid save
                    }
                },

                requestStart: function(e) {
                    // handle event

                },


                schema: {
                    data: "Data",
                    total: "Total",
                    PopNotificationMessage: "PopNotificationMessage", //Custom message to the grid
                    PopNotificationMessageType: "PopNotificationMessageType", //Type of notification
                    model: { // define the model of the data source. Required for validation and property types.
                        id: "Id",
                        fields: {

                            Id: { editable: false, type: "number" },

                            //TableID: { defaultValue: { Id: 15, TableName: "Tokens" } },

                            //TableID: { editable: true, type: "number", defaultValue: 15 },

                            //TableID: { editable: true, type: "number"},

                            TableID: { editable: true, type: "number", defaultValue: tableDefaultID },


                            ColumnName: { type: "string", validation: { required: true } }

                        }
                    }

                },


                batch: false,

                transport: { //use HTTP POST request as by default GET is not allowed by ASP.NET MVC

                    create: {
                        url: "@Html.Raw(Url.Action("Create", "Column"))",
                        contentType: "application/json",
                        type: "POST"
                    },

                    read: {
                        url: "@Html.Raw(Url.Action("Read", "Column"))",
                        contentType: "application/json",
                        type: "POST"
                    },

                    update: {
                        url: "@Html.Raw(Url.Action("Update", "Column"))",
                        contentType: "application/json",
                        type: "POST"
                    },

                    destroy: {
                        url: "@Html.Raw(Url.Action("Destroy", "Column"))",
                        contentType: "application/json",
                        type: "POST"
                    }

                    ,

                    parameterMap: function (data, operation) {
                        return JSON.stringify(data);
                    }

                }

            }


        });


                });




    function tableDropDownEditor(container, options) {
        $('<input data-bind="value:' + options.field + '"/>')
          .appendTo(container)
          .kendoDropDownList({
              dataTextField: "TableName",
              dataValueField: "Id",
              dataSource: tables
          });
    }

    function getTableName(tableID) {
        for (var idx = 0, length = tables.length; idx < length; idx++) {
            if (tables[idx].Id === tableID) {
                return tables[idx].TableName;
            }
        }
    }


</script>

<script>


    //http://docs.telerik.com/kendo-ui/api/javascript/ui/notification

    function PopNotify(PopNotificationMessage, PopNotificationMessageType) {

                    var staticNotification = $("#staticNotification").kendoNotification({
                        appendTo: "#appendto",
                        autoHideAfter: 0,
                        //button: false,
                        hideOnClick: false
                    }).data("kendoNotification");

                    //http://api.jquery.com/remove/
                    $("#appendto").empty();
                    staticNotification.show(PopNotificationMessage, PopNotificationMessageType);

                };

</script>







